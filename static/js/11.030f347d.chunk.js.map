{"version":3,"sources":["components/common/Element.js","config/Config.js","utils/ErrorUtils.js","components/common/BlockTitle.js","components/applications/Plan.js","hooks/UseStripeApi.js","actions/StripeActions.js","components/applications/Plans.js","components/applications/TaskUnifierCloud.js"],"names":["Element","_ref","image","head","title","content","_jsxs","className","children","_jsx","dangerouslySetInnerHTML","__html","config","common","sku","trialSku","latestReleaseUrl","local","apiUrl","cloudUrl","stripe","publicKey","productId","dev","prod","getConfig","_objectSpread","showError","error","_notification","message","description","toString","response","data","_Modal","JSON","stringify","width","BlockTitle","Plan","plan","onSelectPlan","features","nickname","getFeaturesFromPlan","_Col","span","md","style","display","flexDirection","padding","border","borderRadius","textAlign","height","_Typography","Title","level","margin","_List","dataSource","size","bordered","renderItem","item","Item","marginTop","id","amount","toFixed","fontWeight","currency","interval","_Button","type","onClick","useStripeApi","dispatch","useDispatch","getPlans","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","axios","method","url","concat","responseType","sent","abrupt","t0","stop","processSku","email","_callee2","_context2","Plans","stripeApi","_useState","useState","_useState2","_slicedToArray","plans","setPlans","_useState3","_useState4","busy","setBusy","useEffect","fetchPlans","_ref2","_plans","finish","apply","arguments","_Spin","spinning","_Row","gutter","_toConsumableArray","sort","a","b","localeCompare","map","TaskUnifierCloud","translations","Translations","React","Fragment","Block","color","BlockContent","xs","sm","cloud_title","cloud_text","Icon","icon","base_plans","href","cloud_create_account"],"mappings":"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","file":"static/js/11.030f347d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Element({ image, head, title, content }) {\n    return (\n        <div className=\"element\">\n            {image && (\n                <div className={(title || content) ? 'image-small' : 'image-big'}>\n                    {image}\n                </div>\n            )}\n            {(title || content) && (\n                <div className=\"text\">\n                    <div className={'element-title' + (head ? '' : ' small')}>{title}</div>\n                    {typeof content === 'string' ? (\n                        <span dangerouslySetInnerHTML={{ __html: content }} />\n                    ) : content}\n                </div>\n            )}\n        </div>\n    );\n}\n\nElement.propTypes = {\n    image: PropTypes.node,\n    head: PropTypes.bool,\n    title: PropTypes.node,\n    content: PropTypes.node\n};\n\nexport default Element;","const config = {\n    common: {\n        sku: 'tu-app-pro-1',\n        trialSku: 'tu-app-pro-trial-1',\n        latestReleaseUrl: 'https://api.github.com/repos/leclercb/taskunifier-app/releases/latest'\n    },\n    local: {\n        apiUrl: 'http://localhost:2000',\n        cloudUrl: 'http://localhost:3000',\n        stripe: {\n            publicKey: 'pk_test_2s6bAR33dvEhfo6HPxUFp3aC00Oeu6YaC3',\n            productId: 'prod_G25vLYUMMZ425U'\n        }\n    },\n    dev: {\n        apiUrl: 'https://api-dev.taskunifier.app',\n        cloudUrl: 'https://cloud-dev.taskunifier.app',\n        stripe: {\n            publicKey: 'pk_test_2s6bAR33dvEhfo6HPxUFp3aC00Oeu6YaC3',\n            productId: 'prod_G25vLYUMMZ425U'\n        }\n    },\n    prod: {\n        apiUrl: 'https://api.taskunifier.app',\n        cloudUrl: 'https://cloud.taskunifier.app',\n        stripe: {\n            publicKey: 'pk_live_4lKvIf62Jr5Gmcoq7LMB8m8c00FigLOWJL',\n            productId: 'prod_G25rZGmCt27V8q'\n        }\n    }\n};\n\nexport function getConfig() {\n    return {\n        ...config.common,\n        ...config[process.env.REACT_APP_STAGE]\n    };\n}","import React from 'react';\nimport { Modal, notification } from 'antd';\n\nexport function showError(title, error) {\n    notification.error({\n        message: title,\n        description: error.toString()\n    });\n\n    const content = error.response && error.response.data ? error.response.data : error;\n\n    Modal.error({\n        title,\n        content: (\n            <div>\n                <pre>\n                    {JSON.stringify(content, null, 2)}\n                </pre>\n            </div>\n        ),\n        width: 800\n    });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction BlockTitle({ children, className }) {\n    return (\n        <div className={'block-title ' + className}>\n            {children}\n        </div>\n    );\n}\n\nBlockTitle.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string\n};\n\nexport default BlockTitle;","import React from 'react';\nimport { Button, Col, List, Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nfunction Plan({ plan, onSelectPlan }) {\n    const getFeaturesFromPlan = plan => {\n        switch (plan.nickname) {\n            case 'Free':\n                return [\n                    (<strong key={0}>100 Tasks</strong>),\n                    (<strong key={1}>10 Notes</strong>),\n                    '10 Contacts',\n                    '10 Contexts',\n                    '10 Folders',\n                    '10 Goals',\n                    '10 Locations'\n                ];\n            case 'Monthly':\n                return [\n                    (<strong key={0}>10000 Tasks</strong>),\n                    (<strong key={1}>1000 Notes</strong>),\n                    '100 Contacts',\n                    '100 Contexts',\n                    '100 Folders',\n                    '100 Goals',\n                    '100 Locations',\n                    '100 Note Filters',\n                    '100 Task Filters',\n                    '10 Custom Note Fields',\n                    '10 Custom Task Fields',\n                    '100 Task Templates'\n                ];\n            case 'Yearly':\n                return [\n                    (<strong key={0}>10000 Tasks</strong>),\n                    (<strong key={1}>1000 Notes</strong>),\n                    '100 Contacts',\n                    '100 Contexts',\n                    '100 Folders',\n                    '100 Goals',\n                    '100 Locations',\n                    '100 Note Filters',\n                    '100 Task Filters',\n                    '10 Custom Note Fields',\n                    '10 Custom Task Fields',\n                    '100 Task Templates'\n                ];\n            default:\n                return [];\n        }\n    };\n\n    const features = getFeaturesFromPlan(plan);\n\n    return (\n        <Col span={24} md={8}>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                padding: 20,\n                border: '3px solid #cccccc',\n                borderRadius: 10,\n                textAlign: 'center',\n                height: '100%'\n            }}>\n                <Typography.Title level={3}>{plan.nickname}</Typography.Title>\n                <div style={{ margin: 20 }}>\n                    <List\n                        dataSource={features}\n                        size=\"small\"\n                        bordered={false}\n                        renderItem={item => (\n                            <List.Item>\n                                <span>{item}</span>\n                            </List.Item>\n                        )} />\n                </div>\n                <div style={{ marginTop: 'auto' }}>\n                    {plan.id === 'free' && (\n                        <Typography.Title level={4}>Free</Typography.Title>\n                    )}\n                    {plan.id !== 'free' && (\n                        <Typography.Title level={4}>\n                            {(plan.amount / 100).toFixed(2)} <span style={{ fontWeight: 'normal' }}>{plan.currency} per {plan.interval}</span>\n                        </Typography.Title>\n                    )}\n                    {onSelectPlan && (\n                        <Button\n                            type=\"primary\"\n                            onClick={() => onSelectPlan(plan, plan.amount)}>\n                            Select this plan\n                        </Button>\n                    )}\n                </div>\n            </div>\n        </Col>\n    );\n}\n\nPlan.propTypes = {\n    plan: PropTypes.object.isRequired,\n    onSelectPlan: PropTypes.func\n};\n\nexport default Plan;","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getPlans, processSku } from 'actions/StripeActions';\n\nexport function useStripeApi() {\n    const dispatch = useDispatch();\n\n    const getPlansCallback = useCallback(\n        productId => dispatch(getPlans(productId)),\n        [dispatch]\n    );\n\n    const processSkuCallback = useCallback(\n        (sku, email) => dispatch(processSku(sku, email)),\n        [dispatch]\n    );\n\n    return {\n        getPlans: getPlansCallback,\n        processSku: processSkuCallback\n    };\n}","import axios from 'axios';\nimport { getConfig } from 'config/Config';\nimport { showError } from 'utils/ErrorUtils';\n\nexport function getPlans(productId) {\n    return async () => {\n        try {\n            const result = await axios({\n                method: 'GET',\n                url: `${getConfig().apiUrl}/v1/stripe/products/${productId}/plans`,\n                responseType: 'json'\n            });\n\n            return result.data;\n        } catch (error) {\n            showError('Plans retrieval failed', error);\n            throw error;\n        }\n    };\n}\n\nexport function processSku(sku, email) {\n    return async () => {\n        try {\n            const result = await axios({\n                method: 'POST',\n                url: `${getConfig().apiUrl}/v1/stripe/skus/process`,\n                responseType: 'json',\n                data: {\n                    sku,\n                    email\n                }\n            });\n\n            return result.data;\n        } catch (error) {\n            showError('SKU process failed', error);\n            throw error;\n        }\n    };\n}","import React, { useEffect, useState } from 'react';\nimport { Row, Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport Plan from 'components/applications/Plan';\nimport { getConfig } from 'config/Config';\nimport { useStripeApi } from 'hooks/UseStripeApi';\n\nfunction Plans({ onSelectPlan }) {\n    const stripeApi = useStripeApi();\n    const [plans, setPlans] = useState([]);\n\n    const [busy, setBusy] = useState(false);\n\n    useEffect(() => {\n        const fetchPlans = async () => {\n            try {\n                setBusy(true);\n                const plans = await stripeApi.getPlans(getConfig().stripe.productId);\n                setPlans(plans);\n            } finally {\n                setBusy(false);\n            }\n        };\n\n        fetchPlans();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const freePlan = {\n        id: 'free',\n        nickname: 'Free',\n        amount: 0\n    };\n\n    return (\n        <Spin spinning={busy}>\n            <Row type=\"flex\" gutter={20}>\n                {[freePlan, ...plans].sort((a, b) => a.nickname.localeCompare(b.nickname)).map(plan => (\n                    <Plan key={plan.id} plan={plan} onSelectPlan={onSelectPlan} />\n                ))}\n            </Row>\n        </Spin>\n    );\n}\n\nPlans.propTypes = {\n    onSelectPlan: PropTypes.func\n};\n\nexport default Plans;","import React from 'react';\nimport { Col, Row } from 'antd';\nimport Plans from 'components/applications/Plans';\nimport Block from 'components/common/Block';\nimport BlockContent from 'components/common/BlockContent';\nimport BlockTitle from 'components/common/BlockTitle';\nimport Element from 'components/common/Element';\nimport Icon from 'components/common/Icon';\nimport { getConfig } from 'config/Config';\nimport Translations from 'constants/Translations';\n\nfunction TaskUnifierCloud() {\n    const translations = Translations;\n\n    return (\n        <React.Fragment>\n            <Block color=\"white\">\n                <BlockContent>\n                    <Row gutter={40}>\n                        <Col xs={24} sm={12}>\n                            <Element\n                                head={true}\n                                title={translations.cloud_title}\n                                content={translations.cloud_text} />\n                        </Col>\n                        <Col xs={24} sm={12}>\n                            <Element image={<Icon icon=\"cloud\" />} />\n                        </Col>\n                    </Row>\n                </BlockContent>\n            </Block>\n            <Block color=\"white\">\n                <BlockTitle>{translations.base_plans}</BlockTitle>\n                <BlockContent>\n                    <Plans />\n                    <a href={getConfig().cloudUrl} className=\"main-link big\" style={{ marginTop: 30 }}>\n                        {translations.cloud_create_account}\n                    </a>\n                </BlockContent>\n            </Block>\n        </React.Fragment>\n    );\n}\n\nexport default TaskUnifierCloud;"],"sourceRoot":""}