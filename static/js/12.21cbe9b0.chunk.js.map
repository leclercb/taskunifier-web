{"version":3,"sources":["components/common/Element.js","config/Config.js","utils/ErrorUtils.js","hooks/UseMailApi.js","actions/MailActions.js","components/contactus/ContactUs.js","utils/FormUtils.js"],"names":["Element","_ref","image","head","title","content","_jsxs","className","children","_jsx","dangerouslySetInnerHTML","__html","config","common","sku","trialSku","latestReleaseUrl","local","apiUrl","cloudUrl","stripe","publicKey","productId","dev","prod","getConfig","_objectSpread","showError","error","_notification","message","description","toString","response","data","_Modal","JSON","stringify","width","useMailApi","dispatch","useDispatch","sendMail","useCallback","email","subject","msg","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","responseType","_message","success","t0","stop","ContactUs","mailApi","_useState","useState","_useState2","_slicedToArray","busy","setBusy","_Form$useForm","_Form","useForm","form","onSubmit","values","validateFields","sent","finish","apply","arguments","translations","Translations","formItemLayout","labelCol","xs","span","sm","xl","wrapperCol","tailFormItemLayout","offset","React","Fragment","Block","color","BlockContent","_Row","gutter","_Col","contact_us_title","contact_us_text","Icon","icon","_Spin","spinning","Item","name","label","rules","required","_Input","type","TextArea","rows","_Button","onClick"],"mappings":"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","file":"static/js/12.21cbe9b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Element({ image, head, title, content }) {\n    return (\n        <div className=\"element\">\n            {image && (\n                <div className={(title || content) ? 'image-small' : 'image-big'}>\n                    {image}\n                </div>\n            )}\n            {(title || content) && (\n                <div className=\"text\">\n                    <div className={'element-title' + (head ? '' : ' small')}>{title}</div>\n                    {typeof content === 'string' ? (\n                        <span dangerouslySetInnerHTML={{ __html: content }} />\n                    ) : content}\n                </div>\n            )}\n        </div>\n    );\n}\n\nElement.propTypes = {\n    image: PropTypes.node,\n    head: PropTypes.bool,\n    title: PropTypes.node,\n    content: PropTypes.node\n};\n\nexport default Element;","const config = {\n    common: {\n        sku: 'tu-app-pro-1',\n        trialSku: 'tu-app-pro-trial-1',\n        latestReleaseUrl: 'https://api.github.com/repos/leclercb/taskunifier-app/releases/latest'\n    },\n    local: {\n        apiUrl: 'http://localhost:2000',\n        cloudUrl: 'http://localhost:3000',\n        stripe: {\n            publicKey: 'pk_test_2s6bAR33dvEhfo6HPxUFp3aC00Oeu6YaC3',\n            productId: 'prod_G25vLYUMMZ425U'\n        }\n    },\n    dev: {\n        apiUrl: 'https://api-dev.taskunifier.app',\n        cloudUrl: 'https://cloud-dev.taskunifier.app',\n        stripe: {\n            publicKey: 'pk_test_2s6bAR33dvEhfo6HPxUFp3aC00Oeu6YaC3',\n            productId: 'prod_G25vLYUMMZ425U'\n        }\n    },\n    prod: {\n        apiUrl: 'https://api.taskunifier.app',\n        cloudUrl: 'https://cloud.taskunifier.app',\n        stripe: {\n            publicKey: 'pk_live_4lKvIf62Jr5Gmcoq7LMB8m8c00FigLOWJL',\n            productId: 'prod_G25rZGmCt27V8q'\n        }\n    }\n};\n\nexport function getConfig() {\n    return {\n        ...config.common,\n        ...config[process.env.REACT_APP_STAGE]\n    };\n}","import React from 'react';\nimport { Modal, notification } from 'antd';\n\nexport function showError(title, error) {\n    notification.error({\n        message: title,\n        description: error.toString()\n    });\n\n    const content = error.response && error.response.data ? error.response.data : error;\n\n    Modal.error({\n        title,\n        content: (\n            <div>\n                <pre>\n                    {JSON.stringify(content, null, 2)}\n                </pre>\n            </div>\n        ),\n        width: 800\n    });\n}","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { sendMail } from 'actions/MailActions';\n\nexport function useMailApi() {\n    const dispatch = useDispatch();\n\n    const sendMailCallback = useCallback(\n        (email, subject, msg) => dispatch(sendMail(email, subject, msg)),\n        [dispatch]\n    );\n\n    return {\n        sendMail: sendMailCallback\n    };\n}","import axios from 'axios';\nimport { message } from 'antd';\nimport { getConfig } from 'config/Config';\nimport { showError } from 'utils/ErrorUtils';\n\nexport function sendMail(email, subject, msg) {\n    return async () => {\n        try {\n            await axios({\n                method: 'POST',\n                url: `${getConfig().apiUrl}/v1/mails`,\n                data: {\n                    email,\n                    subject,\n                    message: msg\n                },\n                responseType: 'json'\n            });\n\n            message.success('The email has been successfully sent !');\n        } catch (error) {\n            showError('The email has not been sent !', error);\n            throw error;\n        }\n    };\n}","import React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row, Spin } from 'antd';\nimport Block from 'components/common/Block';\nimport BlockContent from 'components/common/BlockContent';\nimport Element from 'components/common/Element';\nimport Icon from 'components/common/Icon';\nimport Translations from 'constants/Translations';\nimport { useMailApi } from 'hooks/UseMailApi';\nimport { getDefaultFormItemLayout, getDefaultTailFormItemLayout } from 'utils/FormUtils';\n\nfunction ContactUs() {\n    const mailApi = useMailApi();\n    const [busy, setBusy] = useState(false);\n    const [form] = Form.useForm();\n\n    const onSubmit = async () => {\n        try {\n            const values = await form.validateFields();\n\n            try {\n                setBusy(true);\n                await mailApi.sendMail(\n                    values.email,\n                    values.subject,\n                    values.message);\n            } finally {\n                setBusy(false);\n            }\n        } catch (error) {\n            // Skip\n        }\n    };\n\n    const translations = Translations;\n\n    const formItemLayout = getDefaultFormItemLayout();\n    const tailFormItemLayout = getDefaultTailFormItemLayout();\n\n    return (\n        <React.Fragment>\n            <Block color=\"white\">\n                <BlockContent>\n                    <Row gutter={40}>\n                        <Col xs={24} sm={12}>\n                            <Element\n                                head={true}\n                                title={translations.contact_us_title}\n                                content={translations.contact_us_text} />\n                        </Col>\n                        <Col xs={24} sm={12}>\n                            <Element image={<Icon icon={['far', 'envelope']} />} />\n                        </Col>\n                    </Row>\n                </BlockContent>\n            </Block>\n            <Spin spinning={busy}>\n                <Block color=\"white\">\n                    <BlockContent>\n                        <Form form={form} {...formItemLayout}>\n                            <Form.Item\n                                name=\"subject\"\n                                label=\"Subject\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'The subject is required'\n                                    }\n                                ]}>\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"email\"\n                                label=\"Email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Your email is required'\n                                    },\n                                    {\n                                        type: 'email',\n                                        message: 'Your email is invalid'\n                                    }\n                                ]}>\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"message\"\n                                label=\"Message\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'The message is required'\n                                    }\n                                ]}>\n                                <Input.TextArea rows={5} />\n                            </Form.Item>\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button onClick={onSubmit}>\n                                    Send\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </BlockContent>\n                </Block>\n            </Spin>\n        </React.Fragment>\n    );\n}\n\nexport default ContactUs;","export function getDefaultFormItemLayout() {\n    return {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            xl: { span: 6 }\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            xl: { span: 14 }\n        }\n    };\n}\n\nexport function getDefaultTailFormItemLayout() {\n    return {\n        wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0\n            },\n            sm: {\n                span: 14,\n                offset: 10\n            },\n            xl: {\n                span: 12,\n                offset: 8\n            }\n        }\n    };\n}"],"sourceRoot":""}